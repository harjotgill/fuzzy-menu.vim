*fuzzymenu.vim.txt*	a fuzzy-finder menu for vim
Am Laher                                                       *fuzzymenu.vim*

==============================================================================
CONTENTS                                              *fuzzymenu.vim-contents*
  1. Introduction........................................|fuzzymenu.vim-intro|
  2. Configuration......................................|fuzzymenu.vim-config|
  3. Commands.........................................|fuzzymenu.vim-commands|
  4. Functions.......................................|fuzzymenu.vim-functions|

==============================================================================
INTRODUCTION                                             *fuzzymenu.vim-intro*

{fuzzymenu}{1} is a fuzzy-finder menu for vim, built on top of {fzf}{2}.
Discover vim features easily, just invoke fuzzymenu and start typing. See the
fuzzymenu.vim README for more background.

{1} https://github.com/laher/fuzzymenu.vim {2} https://github.com/junegunn/fzf

See also, |fzf|

==============================================================================
CONFIGURATION                                           *fuzzymenu.vim-config*

                                                      *g:fuzzymenu_vim_config*
config file used for dynamically updating vim settings  Recommend using a
secondary file, then including it from .vimrc

                                                    *g:fuzzymenu_align_adjust*
Adjust alignment of right-aligned text Use a negative number to adjust
leftwards

                                                        *g:fuzzymenu_auto_add*
Automatically add menu items. Note: I'll break these up in future into several
categories

==============================================================================
COMMANDS                                              *fuzzymenu.vim-commands*

There is a single command, |:Fzm|, to invoke fuzzymenu.

:Fzm[!]                                                                 *:Fzm*
  Fzm invokes fuzzymenu

:FzmOps[!]                                                           *:FzmOps*
  FzmOps launches a multi-step fzm sequence of operators and
  text-objects/motions

:FzmOp[!] {operator}                                                  *:FzmOp*
  FzmOp {operator} launches a multi-step fzm sequence of text-objects/motions

:FzmMapKey[!]                                                     *:FzmMapKey*
  FzmMapKey launches a multi-step fzm sequence to map a key into your vim
  config

:GGrep[!]                                                             *:GGrep*
  GGrep finds a file using git as a base dir GGrep runs fzf#vim#grep with
  git-grep. This is recommended in fzf docs

==============================================================================
FUNCTIONS                                            *fuzzymenu.vim-functions*

fuzzymenu#AddAll({items}, {baseDef})                      *fuzzymenu#AddAll()*
  Add several menu items to fuzzymenu. {items} is a dict of names and defs.
  {baseDef} is a dict to combine with each item (see Add()). {baseDef} is a
  dict with common members

fuzzymenu#Add({name}, {def})                                 *fuzzymenu#Add()*
  Add a menu item to fuzzymenu. {name} are unique. {def} is a dict with a
  mandatory member, 'exec'

fuzzymenu#MainSource({options})                       *fuzzymenu#MainSource()*
  Main source of menu items. Combine with a Sink

fuzzymenu#Run({params})                                      *fuzzymenu#Run()*
  Invoke fuzzymenu

fuzzymenu#motions#Run({operator}, {multiplier})      *fuzzymenu#motions#Run()*
  Fuzzy-select a motion (for yank,change,delete,etc)

fuzzymenu#operatorpending#Run({operator})    *fuzzymenu#operatorpending#Run()*
  Fuzzy-select a text object (for yank,change,delete,etc)

fuzzymenu#operators#OperatorCommands()
                                      *fuzzymenu#operators#OperatorCommands()*
  Fuzzy-select an operator (yank,change,delete,etc)

fuzzymenu#textobjects#Run({operator}, {category})
                                                 *fuzzymenu#textobjects#Run()*
  Fuzzy-select a text object (for yank,change,delete,etc)

fuzzymenu#textobjects#Add({obj}, {description})  *fuzzymenu#textobjects#Add()*
  Add a text object (for yank,change,delete,etc)

fuzzymenu#vimconfig#MapKey({params})            *fuzzymenu#vimconfig#MapKey()*
  Invoke fuzzymenu to map a key

fuzzymenu#vimconfig#ApplySetting({write}) *fuzzymenu#vimconfig#ApplySetting()*
  Invoke fuzzymenu to map a key


vim:tw=78:ts=8:ft=help:norl:
